<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\WebformInterface;
use Drupal\webform\WebformSubmissionInterface;

use Uspdev\Senhaunica\Senhaunica;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Adiciona a checkbox na aba de configurações do Webform.
 */
function webform_senhaunica_webform_third_party_settings_form_alter(array &$form, FormStateInterface $form_state) {
    $webform = $form_state->getFormObject()->getEntity();

    $form['third_party_settings']['webform_senhaunica'] = [
        '#type' => 'details',
        '#title' => t('Universidade de São Paulo'),
        '#open' => FALSE,
    ];

    $form['third_party_settings']['webform_senhaunica']['habilitar_senhaunica'] = [
        '#type' => 'checkbox',
        '#title' => t('Habilitar senha única'),
        '#default_value' => $webform->getThirdPartySetting('webform_senhaunica', 'habilitar_senhaunica', FALSE),
    ];

    $form['third_party_settings']['webform_senhaunica']['identifier'] = [
        '#type' => 'textfield',
        '#title' => t('Identificador'),
        '#default_value' => $webform->getThirdPartySetting('webform_senhaunica', 'identifier'),
        '#states' => [
            'visible' => [
                ':input[name="third_party_settings[webform_senhaunica][habilitar_senhaunica]"]' => ['checked' => TRUE],
            ],
        ],
    ];

    $form['third_party_settings']['webform_senhaunica']['secret'] = [
        '#type' => 'textfield',
        '#title' => t('Secret'),
        '#default_value' => $webform->getThirdPartySetting('webform_senhaunica', 'secret'),
        '#states' => [
            'visible' => [
                ':input[name="third_party_settings[webform_senhaunica][habilitar_senhaunica]"]' => ['checked' => TRUE],
            ],
        ],
    ];

    $form['third_party_settings']['webform_senhaunica']['callback_id'] = [
        '#type' => 'textfield',
        '#title' => t('Callback ID'),
        '#default_value' => $webform->getThirdPartySetting('webform_senhaunica', 'callback_id'),
        '#states' => [
            'visible' => [
                ':input[name="third_party_settings[webform_senhaunica][habilitar_senhaunica]"]' => ['checked' => TRUE],
            ],
        ],
    ];
}

function webform_senhaunica_webform_access(\Drupal\webform\WebformInterface $webform, $operation, \Drupal\Core\Session\AccountInterface $account) {
    $habilitado = (bool) $webform->getThirdPartySetting('webform_senhaunica', 'habilitar_senhaunica', FALSE);

    // Se estiver habilitado e o usuário for anônimo, bloqueia ou redireciona
    // Melhorar ainda a entity que está pegando na hora do redirecionamento
    if ($habilitado) {
        $clientCredentials = [
            'identifier'  => $webform->getThirdPartySetting('webform_senhaunica', 'identifier'),
            'secret'      => $webform->getThirdPartySetting('webform_senhaunica', 'secret'),
            'callback_id' => $webform->getThirdPartySetting('webform_senhaunica', 'callback_id')
        ];

        Senhaunica::login($clientCredentials);
    }
}

/**
 * Ao salvar o webform, garante que os campos existam (ou sejam removidos)
 * conforme o setting "habilitar_senhaunica".
 */
function webform_senhaunica_entity_presave(EntityInterface $entity) {
    if (!$entity instanceof WebformInterface) {
        return;
    }

    $enabled = (bool) $entity->getThirdPartySetting('webform_senhaunica', 'habilitar_senhaunica', FALSE);

    // Definição dos campos que queremos controlar.
    $keys = [
        'wsuserid'     => 'WS User ID',
        'loginUsuario' => 'Login do usuário',
        'nomeUsuario'  => 'Nome do usuário',
    ];

    if ($enabled) {
        foreach ($keys as $key => $title) {
            $entity->setElementProperties($key, [
                '#type'    => 'hidden',
                '#title'   => $title,
                '#private' => TRUE,
            ]);
        }
    } else {
        foreach (array_keys($keys) as $key) {
            $entity->deleteElement($key);
        }
    }
}

/**
 * Faz os elementos persistirem, mesmo que alguém tente apagá-los manualmente.
 */
function webform_senhaunica_entity_load(array $entities) {
    foreach ($entities as $entity) {
        if (!$entity instanceof WebformInterface) {
            continue;
        }

        $enabled = (bool) $entity->getThirdPartySetting('webform_senhaunica', 'habilitar_senhaunica', FALSE);

        if ($enabled) {
            $keys = [
            'wsuserid'     => 'WS User ID',
            'loginUsuario' => 'Login do usuário',
            'nomeUsuario'  => 'Nome do usuário',
            ];

            foreach ($keys as $key => $title) {
                // Se o elemento não existe, recria.
                if (!$entity->getElement($key)) {
                    $entity->setElementProperties($key, [
                    '#type'    => 'hidden',
                    '#title'   => $title,
                    '#private' => TRUE,
                    ]);
                }
            }
        }
    }
}

/**
 * Altera apenas o formulário de submissão do Webform (não afeta a aba "Resultados").
 */
function webform_senhaunica_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    if (strpos($form_id, 'webform_submission_') === 0 && isset($form['#webform_id'])) {
        $form_object = $form_state->getFormObject();

        if ($form_object && method_exists($form_object, 'getWebform')) {
            $webform = $form_object->getWebform();
            $enabled = (bool) $webform->getThirdPartySetting('webform_senhaunica', 'habilitar_senhaunica', FALSE);

            if ($enabled && empty($form_state->getBuildInfo()['base_form_id'])) {
                // Em vez de bloquear, redireciona para o controller de autenticação
                $response = new RedirectResponse(\Drupal::url('webform_senhaunica.callback'));
                $response->send();
                exit;
            }
        }
    }
}
